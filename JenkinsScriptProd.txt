    node('master') {
    try {
    timestamps {
        stage('Checkout') {
            git credentialsId: 'lgm-github-password-nuevo', url: 'https://github.com/TronicoGroup/App-Tronic-Group'
        }
        
        stage('Calidad de codigo') {
            withSonarQubeEnv() {
                sh "/opt/sonar-runner/bin/sonar-runner -X"
            }
        }

		nvm('v8.11.3') {
        	stage('Pre Build') {
            	sh 'npm shrinkwrap'
            	sh 'npm install'
            	sh 'npm link typescript'
            	sh 'npm link webpack-cli'
            	sh 'npm link express'
        	}
        
        	stage('Build') {
            	sh 'npm run build'
            	archiveArtifacts 'build/**'
        	}
		}

        stage('Send 2 Prod') { 
            withAWS(credentials: 'AWS-Oregon', region: 'us-west-2') {
                s3Delete bucket: 'static-test-1', path: ''
                s3Upload bucket: 'static-test-1', includePathPattern: '**', workingDir: 'build'
            }
        }
        
        stage('Clean'){
            emailext attachLog: true, body: 'Build Execution Completed!', replyTo: 'jenkins@tronicogroup.com', subject: 'Project App-Tronic-Group built ok!', to: 'lgomez@tronicogroup.com,vgonzalez@tronicogroup.com,jcbuendia@tronicogroup.com,mmorales@tronicogroup.com'
            cleanWs()
        }
        
    }
    } catch (err) {
        emailext attachLog: true, body: 'Build Execution Failed!', replyTo: 'jenkins@tronicogroup.com', subject: 'Project App-Tronic-Group built FAILED!!!!!!', to: 'lgomez@tronicogroup.com,vgonzalez@tronicogroup.com,jcbuendia@tronicogroup.com,mmorales@tronicogroup.com'
    } 
}
